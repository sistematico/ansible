---
- name: install python-certbot-nginx
  apt:
    package: python-certbot-nginx
    state: present
  
- name: check if certificate already exists
  stat:
    path: /etc/letsencrypt/live/{{ item.domain }}/cert.pem
  register: letsencrypt_cert
  with_items: "{{ domains }}"

- name: check if certificate for default domain already exists
  stat:
    path: /etc/letsencrypt/live/{{ default_domain }}/cert.pem
  register: letsencrypt_cert_default
  
- name: stop nginx to allow certbot to generate a cert
  service:
    name: nginx
    state: stopped

- name: generate new certificate if one doesn't exist
  shell: "certbot certonly --standalone --noninteractive --agree-tos --email {{ certbot_admin_email }} -d {{ item.item.domain }},www.{{ item.item.domain }}"
  with_items: "{{ letsencrypt_cert.results }}"
  when: item.stat.exists == false

- name: generate new default domain certificate if one doesn't exist
  shell: "certbot certonly --standalone --noninteractive --agree-tos --email {{ certbot_admin_email }} -d {{ default_domain }},{{ansible_hostname}}.{{ default_domain }}"
  when: letsencrypt_cert_default.stat.exists == false

- name: create crontab for certbot renew
  template: 
    src: templates/crontab.j2
    dest: /etc/crontab

- name: create crontab for certbot renew
  template: 
    src: templates/update-cert.sh.j2
    dest: /usr/local/bin/update-cert.sh
    mode: '0755'

- name: create certs
  shell: /usr/local/bin/update-cert.sh 2> /var/log/update-cert.log

- name: start nginx after cert has been generated
  service:
    name: nginx
    state: restarted